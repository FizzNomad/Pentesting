#!/bin/bash

# Set variables
HOST="example.com"
PORT="443"

# Test 1: Cipher Suite Evaluation
echo "=== Cipher Suite Evaluation ===" > cipher_suite.log
openssl s_client -connect $HOST:$PORT -cipher 'ALL:eNULL' -no_tls1_3 < /dev/null 2>&1 | grep -i "Cipher" | sort | uniq -c >> cipher_suite.log
echo "" >> cipher_suite.log

# Test 2: Certificate Validation
echo "=== Certificate Validation ===" > certificate_validation.log
openssl s_client -connect $HOST:$PORT -verify 5 -showcerts < /dev/null >> certificate_validation.log
echo "" >> certificate_validation.log

# Test 3: Certificate Revocation Checks
echo "=== Certificate Revocation Checks ===" > certificate_revocation.log
openssl s_client -connect $HOST:$PORT -verify 5 -showcerts -crl_check < /dev/null >> certificate_revocation.log
echo "" >> certificate_revocation.log

# Test 4: Secure Renegotiation and Resumption
echo "=== Secure Renegotiation and Resumption ===" > secure_renegotiation.log
openssl s_client -connect $HOST:$PORT -reconnect < /dev/null >> secure_renegotiation.log
echo "" >> secure_renegotiation.log

# Test 5: HTTP Strict Transport Security (HSTS)
echo "=== HTTP Strict Transport Security (HSTS) ===" > hsts.log
curl -s -D - https://$HOST:$PORT -o /dev/null | grep -i "Strict-Transport-Security" >> hsts.log
echo "" >> hsts.log

# Test 6: Forward Secrecy
echo "=== Forward Secrecy ===" > forward_secrecy.log
openssl s_client -connect $HOST:$PORT -cipher 'EDH' < /dev/null >> forward_secrecy.log
echo "" >> forward_secrecy.log

# Test 7: Compression Methods
echo "=== Compression Methods ===" > compression_methods.log
openssl s_client -connect $HOST:$PORT -comp < /dev/null | grep -i "Compression" >> compression_methods.log
echo "" >> compression_methods.log

# Test 8: Client Certificate Authentication (if applicable)
echo "=== Client Certificate Authentication ===" > client_certificate.log
openssl s_client -connect $HOST:$PORT -cert /path/to/client/cert.pem -key /path/to/client/key.pem < /dev/null >> client_certificate.log
echo "" >> client_certificate.log
